{"name":"Lab.liberty-app-cluster","tagline":"","body":"lab.liberty-app-cluster\r\n=======================\r\n\\\r\n\r\nIMPACT 2014\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_m3e695f67.jpg)\\\r\n\r\n**April 27 - May 1 Las Vegas, NV**\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n**Session 1377**\r\n\r\n**\\\r\nBuild and Manage A WebSphere\\\r\nLiberty Application Cluster\\\r\nincluding the new Admin Center**\r\n\r\n\\\r\n\r\n**Lab Instructions**\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\nAuthors:\r\n\r\nMichael C Thompson, WebSphere Developer,\r\n[mcthomps@us.ibm.com](mailto:mcthomps@us.ibm.com)\r\n\r\nChris Vignola, WebSphere Architecture,\r\n[cvignola@us.ibm.com](mailto:cvignola@us.ibm.com)\r\n\r\n\\\r\n\r\n\\\r\n\r\n**Key Reference Notes for Lab 1377**\r\n\r\n**Passwords and resources**\r\n\r\n\\\r\n\r\nPassword information\r\n\r\nVMWare\r\n\r\nUser: root\r\n\r\nPassword: web1sphere\r\n\r\nNaming conventions\r\n\r\nLiberty installation\r\n\r\n/opt/wlp\r\n\r\nLab materials\r\n\r\n/opt/lab-materials\r\n\r\nLab Instructions (soft-copy)\r\n\r\n/opt/lab-materials/\\\r\nBuild\\_Liberty\\_Cluster\\_Lab\\_Instructions.pdf\r\n\r\n\\\r\n\r\n\\\r\n\r\n**TABLE OF CONTENTS**\r\n\r\n**[1 Objective 4](#_toc267)**\r\n\r\n**[2 Prerequisite Knowledge Prerequisite Knowledge](#_toc279)**\r\n\r\n**[4](#_toc284)**\r\n\r\n[3 Step-by-Step Instructions 5](#_toc288)\r\n\r\n[3.1 Introduction to Liberty 5](#_toc289)\r\n\r\n[3.2 Create a collective 10](#_toc359)\r\n\r\n[3.3 Perform collective operations via scripting 19](#_toc565)\r\n\r\n[3.4 Operations through the Admin Center 22](#_toc641)\r\n\r\n[3.5 Create a cluster 31](#_toc705)\r\n\r\n[3.6 Deploying applications to the cluster 41](#_toc879)\r\n\r\n[3.7 Deploying server packages via Admin Center 51](#_toc983)\r\n\r\n\\\r\n\r\n\\\r\n\r\n1Objective\r\n==========\r\n\r\nIn this hands-on lab, you build a real Liberty application cluster and\r\nmanage it using the Liberty Admin Center, the web-based administrative\r\ninterface. Both application clusters and the Admin Center are new\r\ncapabilities in the IBM WebSphere Application Server V8.5.5 release.\r\nLearn what a Liberty collective is, how clusters are defined, and how to\r\noperate and manage clusters through both the command line and the Admin\r\nCenter and its tools.\r\n\r\n\\\r\n\r\nIn the lab, attendees set up a collective, create a cluster, deploy and\r\nverify applications on the cluster, and perform basic operational tasks\r\non the cluster. After completing this lab, participants are fully\r\nequipped to set up and operate their own production Liberty application\r\nclusters and manage them through the command line or the new Admin\r\nCenter.\r\n\r\n\\\r\n\r\nIn this lab, you learn:\r\n\r\n-   ~~~~ {.western lang=\"en-US\"}\r\nThe concepts and operations of a Liberty collective and clustering with the WebSphere Application Server Liberty profile\r\n~~~~\r\n\r\n-   ~~~~ {.western lang=\"en-US\"}\r\nHands-on experience creating, configuring and performing operations on a collective and cluster\r\n~~~~\r\n\r\n-   ~~~~ {.western lang=\"en-US\"}\r\nHands-on experience with the Jython scripting support\r\n~~~~\r\n\r\n-   ~~~~ {.western lang=\"en-US\"}\r\nHands-on experience with the Admin Center, the new web-based administrative interface\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\r\n2Prerequisite Knowledge\r\n=======================\r\n\r\n-   Basic Linux knowledge\\\r\n    \\\r\n\r\n-   This lab uses gedit as the editor of choice in the command\r\n    examples.\\\r\n    You are free to use any editor you wish (the VM image has vi and\r\n    emacs available).\r\n\r\n\\\r\n\r\n\\\r\nWhen large amounts of text are displayed as part of an operation output\r\nor screen shot, the important portions are highlighted or otherwise\r\nindicated using red.\r\n\r\n\\\r\n\r\n\\\r\n\r\n3Step-by-Step Instructions\r\n==========================\r\n\r\n3.1Introduction to Liberty\r\n--------------------------\r\n\r\n\\\r\n\r\n****Approximate time: 5 - 10 minutes \\\r\n\\\r\n\\\r\n\r\nThese steps take you through the most basic operations supported by the\r\nLiberty profile. This entails starting the default server, deploying an\r\napplication and dynamically changing the server's configuration.\r\n\r\n\\\r\n\r\nThe Liberty profile is designed to provide a world-class application\r\ninfrastructure platform as well as a compelling developer experience. \\\r\n\\\r\n\\\r\n\r\n3.1.1 Create and start the default server. \\\r\n\\\r\n Open a terminal (right-click desktop and select Open in Terminal) and \\\r\n execute the following commands to create and start the default server:\r\n\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"margin-left: 1.27cm; font-weight: normal\"}\r\n# cd /opt/wlp\r\n# bin/server create# bin/server start\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n[root@localhost \\~]\\# cd /opt/wlp\r\n\r\n\\\r\n\r\n[root@localhost wlp]\\# bin/server create\r\n\r\nServer defaultServer created.\r\n\r\n\\\r\n\r\n[root@localhost wlp]\\# bin/server start\r\n\r\nStarting server defaultServer.\r\n\r\nServer defaultServer started with process ID 6336.\r\n\r\n\\\r\n\r\n\\\r\n\\\r\n\r\n\\\r\n\r\n3.1.2 Deploy the sample application \"snoop\" by adding the war file to\r\ndropins.\\\r\n\\\r\n An application archive placed in the dropins directory will be\r\nautomatically\\\r\n deployed and started. Liberty supports two ways to deploy applications:\r\nvia \\\r\n the dropins directory demonstrated here, as well as through\r\nconfiguration.\\\r\n A configuration based deployment will be used later in this lab.\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"margin-left: 1.27cm; font-weight: normal\"}\r\n# cp /opt/lab-materials/applications/snoop.war   usr/servers/defaultServer/dropins\r\n~~~~\r\n\r\n\\\r\n\\\r\n\r\n\\\r\n3.1.3 Access the sample application \"snoop\".\r\n\r\n\\\r\n\r\nStart Firefox, go to the URL\r\n[http://localhost:9080/snoop](http://localhost:9080/snoop)\r\n\r\n\\\r\n\r\n\\\r\n\r\nYou should see a page similar to the following screenshot:\r\n\r\n\\\r\n\r\n\\\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_48dcb6f8.png)\\\r\n\\\r\n Close the browser.\r\n\r\n\\\r\n3.1.4 Change the default HTTP port for the server.\\\r\n\\\r\n The Liberty profile responds to configuration changes dynamically,\\\r\n no restart is required!\\\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"margin-left: 1.27cm; font-weight: normal\"}\r\n# gedit usr/servers/defaultServer/server.xml\r\n~~~~\r\n\r\n\\\r\nChange the HTTP port from 9080 to 8080:\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"margin-left: 1.27cm; font-weight: normal\"}\r\n <httpEndpoint id=\"defaultHttpEndpoint\" httpPort=\"8080\" />\r\n~~~~\r\n\r\n\\\r\n\r\nSave and close the file.\r\n\r\n\\\r\n3.1.5 Use the new port to access the application.\\\r\n\\\r\n\r\nStart Firefox, go to URL\r\n[http://localhost:8080/snoop](http://localhost:8080/snoop)\r\n\r\n\\\r\n\r\n\\\r\n\r\nYou should see a page similar to the following screenshot:\r\n\r\n\\\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_44ee6ac5.png)\\\r\n\\\r\n\r\n\\\r\n Close the browser.\r\n\r\n\\\r\n3.1.6 View the console.log to see messages for the web application.\\\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# gedit usr/servers/defaultServer/logs/console.log\r\n\r\n~~~~\r\n\r\nClose the file.\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"margin-left: 1.27cm; font-weight: normal\"}\r\n~~~~\r\n\r\n3.1.7 Stop the default server.\\\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"margin-left: 1.27cm; font-weight: normal\"}\r\n# bin/server stop\r\n\r\n\r\n\r\n[root@localhost wlp]# bin/server stop\r\nStopping server defaultServer.\r\nServer defaultServer stopped.\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\nYou now have experience with basic server operations, configuration and\\\r\ndeploying an application!\r\n\r\n**3.2Create a collective**\r\n--------------------------\r\n\r\n\\\r\n\r\nApproximate time: 10 - 20 minutes \\\r\n\\\r\nThese steps take you through creating and configuring a basic\r\ncollective. A collective is the set of Liberty servers in a single\r\nadministrative domain. A collective consists of at least one \"collective\r\ncontroller\", a server with the collectiveController-1.0 feature enabled.\r\nOptionally, a collective may have many \"collective members\", servers\r\nwith the collectiveMember-1.0 feature enabled. A collective may be\r\nconfigured to have many collective controllers, called a replica set.\r\nConfiguration of the replica set is not covered in this lab, but\r\ndocumentation is available from wasdev.net.\r\n\r\n\\\r\n\r\nThe following illustration shows a sample collective topology with a\r\nreplicate set of 3 controllers and 5 collective members.\\\r\n\\\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_m4841a3d9.png)\\\r\n\\\r\n\r\n\\\r\n\r\nIn this section, a simple one controller and one member collective will\r\nbe created.\r\n\r\n\\\r\n\r\n\\\r\n\r\n3.2.1 Create a server which will be the collective controller.\\\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# bin/server create controller1\r\n\r\n\r\n\r\n[root@localhost wlp]# bin/server create controller1\r\nServer controller1 created.\r\n~~~~\r\n\r\n\\\r\n\\\r\n\r\n\\\r\n3.2.2 Create the collective controller configuration.\\\r\n\\\r\n\r\nThis will establish the administrative domain security configuration. \\\r\n The servers in the collective communicate with each other using signed\\\r\n SSL certificates. The 'collective create' command establishes the\r\ninitial\\\r\n set of SSL keys.\\\r\n\\\r\n The Liberty profile does not ship with any default passwords. As such,\r\nthe\\\r\n the create command requires a keystore password. In this lab, all\r\nkeystore\\\r\n passwords will be **'Impact2014'**. Each keystore password can be\r\ndifferent,\\\r\n but to keep the lab simple all passwords will be the same.\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# bin/collective create controller1 --keystorePassword=Impact2014 --createConfigFile\r\n\r\n\r\n\r\n[root@localhost wlp]# bin/collective create controller1 --keystorePassword=Impact2014 --createConfigFile\r\nCreating required certificates to establish a collective...\r\nThis may take a while.\r\nSuccessfully generated the controller root certificate.\r\nSuccessfully generated the member root certificate.\r\nSuccessfully generated the server identity certificate.\r\nSuccessfully generated the HTTPS certificate.\r\n\r\nSuccessfully set up collective controller configuration for controller1\r\n\r\nAdd the following lines to the server.xml to enable:\r\n\r\n    <include location=\"${server.config.dir}/collective-create-include.xml\" />\r\n\r\n\r\nPlease ensure administrative security is configured for the server.\r\nAn administrative user is required to join members to the collective.\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\\\r\n\r\n\\\r\n3.2.3 Update the server.xml to include the generated XML file.\\\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# gedit usr/servers/controller1/server.xml\r\n~~~~\r\n\r\n\\\r\nAdd the include from the create operation:\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"margin-left: 1.27cm; font-weight: normal\"}\r\n<include location=\"${server.config.dir}/collective-create-include.xml\" />\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\r\nSave and close the file.\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n3.2.4 Update collective-create-include.xml.\r\n\r\n\\\r\n The Liberty profile does not ship with any default users. Therefore,\r\nthe\\\r\n administrator user name and password must be specified. For the\\\r\n purposes of this lab, use the user name **'admin'** and the password\\\r\n **'adminpwd'** to configure the <quickStartSecurity\\> element, which\\\r\n will establish the administrator user.\r\n\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"margin-left: 1.27cm; font-weight: normal\"}\r\n# gedit usr/servers/controller1/collective-create-include.xml\r\n~~~~\r\n\r\n\\\r\nSet the user and password to admin / adminpwd:\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n<quickStartSecurity userName=\"admin\" userPassword=\"adminpwd\" />\r\n~~~~\r\n\r\n\\\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_m706fd666.png)\\\r\n\\\r\n\r\n\\\r\n\r\nSave and close the file.\r\n\r\n\\\r\n3.2.5 Start the collective controller.\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# bin/server start controller1\r\n\r\n\r\n[root@localhost wlp]# bin/server start controller1\r\nStarting server controller1.\r\nServer controller1 started with process ID 9099.\r\n\r\n~~~~\r\n\r\n\\\r\n\r\n3.2.6 Verify the server started correctly and is ready to receive\r\nmembers.\\\r\n\\\r\n\r\nLook for the following message:\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\nCWWKX9003I: CollectiveRegistration MBean is available.\r\n~~~~\r\n\r\nThe CWWKX9003I message indicates that the collective controller is ready\r\nto receive connections from clients or members.\r\n\r\n\\\r\n\r\nTo quickly find the message, search for it using 'grep':\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# grep CWWKX9003I usr/servers/controller1/logs/messages.log\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: none; border-right: none; padding: 0.04cm 0cm; font-weight: normal; text-align: left; widows: 2; orphans: 2\"}\r\n[root@localhost wlp]# grep CWWKX9003I usr/servers/controller1/logs/messages.log\r\n[3/18/14 13:43:38:424 EDT] 00000015 llective.repository.internal.CollectiveRegistrationMBeanImpl I CWWKX9003I: CollectiveRegistration MBean is available.\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n3.2.7 Create a member to join to the collective.\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# bin/server create member1\r\n\r\n\r\n[root@localhost wlp]# bin/server create member1\r\nServer member1 created.\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n3.2.8 Join member1 to the collective.\\\r\n\\\r\n This will exchange the SSL certificates necessary for the server to\r\nbecome\\\r\n a collective member. Liberty does not have a client-side SSL\r\nconfiguration,\\\r\n so you will need to accept the SSL certificate presented by the\r\ncontroller.\\\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# bin/collective join member1 --host=localhost --port=9443 --user=admin --password=adminpwd --keystorePassword=Impact2014 --createConfigFile\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: none; border-right: none; padding: 0.04cm 0cm; font-weight: normal; text-align: left; widows: 2; orphans: 2\"}\r\n[root@localhost wlp]# bin/collective join member1 --host=localhost --port=9443 --user=admin --password=adminpwd --keystorePassword=Impact2014 --createConfigFile\r\nJoining the collective with target controller localhost:9443...\r\nThis may take a while.\r\n\r\nSSL trust has not been established with the target server.\r\n\r\nCertificate chain information:\r\nCertificate [0]\r\nSubject DN: CN=localhost, OU=controller1, O=ibm, C=us\r\nIssuer DN: OU=controllerRoot, O=a6291247-6162-45e0-ba14-13f2492c4c43, DC=com.ibm.ws.collective\r\nSerial Number: 8,094,236,004,743\r\nExpires: 3/17/19 1:03 PM\r\nSHA-1 digest: E5:AB:0E:10:EC:36:1F:E2:E0:A9:28:3B:99:31:2E:06:88:A0:3A:01\r\nMD5 digest: 7B:F6:46:A6:9F:F3:9B:F9:62:C8:7C:33:8C:CB:14:5F\r\n\r\nCertificate [1]\r\nSubject DN: OU=controllerRoot, O=a6291247-6162-45e0-ba14-13f2492c4c43, DC=com.ibm.ws.collective\r\nIssuer DN: OU=controllerRoot, O=a6291247-6162-45e0-ba14-13f2492c4c43, DC=com.ibm.ws.collective\r\nSerial Number: 8,089,778,095,633\r\nExpires: 3/12/39 12:03 PM\r\nSHA-1 digest: 70:E9:77:87:AF:B0:75:AC:0D:0A:64:87:9C:8A:83:3E:3A:33:97:8F\r\nMD5 digest: BE:E3:34:0F:CC:20:F9:83:0A:B6:62:1F:8E:32:81:3D\r\n\r\nDo you want to accept the above certificate chain? (y/n) y (hit Enter)\r\nSuccessfully completed MBean request to the controller.\r\n\r\nSuccessfully joined the collective for server member1\r\n\r\nAdd the following lines to the server.xml to enable:\r\n\r\n    <include location=\"${server.config.dir}/collective-join-include.xml\" />\r\n~~~~\r\n\r\n\\\r\n\\\r\n\r\n\\\r\n3.2.9 Update the server.xml for member1.\\\r\n\\\r\n Because both the controller and member are running on the same system,\\\r\n the default ports for the member must be changed as the default ports\r\nare\\\r\n already in use by the controller. Update the HTTP and HTTPS ports to be\r\n9081 \\\r\n and 9444.\\\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# gedit usr/servers/member1/server.xml\r\n~~~~\r\n\r\nChange the HTTP and HTTPS ports to 9081 and 9444:\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"margin-left: 1.27cm; font-weight: normal\"}\r\n<httpEndpoint id=\"defaultHttpEndpoint\" httpPort=\"9081\"                                        httpsPort=”9444” />\r\n~~~~\r\n\r\n\\\r\nAdd the include from the join operation:\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n<include location=\"${server.config.dir}/collective-join-include.xml\" />\r\n~~~~\r\n\r\n\\\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_5b42c75e.png)\\\r\n\r\n\\\r\n\r\n\\\r\n\r\nSave and close the file.\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n3.2.10 Start the collective member.\r\n\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# bin/server start member1\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: none; border-right: none; padding: 0.04cm 0cm; font-weight: normal; text-align: left; widows: 2; orphans: 2\"}\r\n[root@localhost wlp]# bin/server start member1\r\nStarting server member1.\r\nServer member1 started with process ID 9559.\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n3.2.11 Verify the member started and is publishing information to the\r\ncontroller.\r\n\r\n\\\r\n\r\nLook for the following messages:\\\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\nCWWKX8112I: The server's host information was successfully published to the collective repository.\r\nCWWKX8114I: The server's paths were successfully published to the \r\ncollective repository. \r\nCWWKX8116I: The server STARTED state was successfully published to the collective repository.\r\n~~~~\r\n\r\nThe CWWKX8112I, CWWKX8114I and CWWKX8116I messages indicate that the\r\ncollective member is successfully communicating with the controller.\r\n\r\n\\\r\n\r\nTo quickly find the messages, search for them using 'grep':\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# grep CWWKX811[246]I usr/servers/member1/logs/messages.log\r\n~~~~\r\n\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n\r\n[root@localhost wlp]# grep CWWKX811[246]I usr/servers/member1/logs/messages.log\r\n[3/18/14 14:00:42:048 EDT] 00000025 llective.member.internal.publisher.ServerManagementPublisher I CWWKX8112I: The server's host information was successfully published to the collective repository. \r\n[3/18/14 14:00:42:355 EDT] 00000020 ws.collective.member.internal.publisher.ServerPathsPublisher I CWWKX8114I: The server's paths were successfully published to the collective repository. \r\n[3/18/14 14:00:42:378 EDT] 00000017 ws.collective.member.internal.publisher.ServerStatePublisher I CWWKX8116I: The server STARTED state was successfully published to the collective repository.\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\r\nYou now have a basic collective topology created. In this topology,\r\nmember1 is a collective member and controller1 is a collective\r\ncontroller.\r\n\r\n\\\r\n\r\n\\\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_4cd59ca4.png)\\\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\nAll collective members publish information about themselves to their\r\ncollective controller. This published information is available for query\r\ndirectly from the controller without need of forwarding the request down\r\nto each collective member.\r\n\r\n\\\r\n\r\nThis published information is used by the controller to determine each\r\nmember's operational state, and is used by the Admin Center to show\r\ninformation about the collective. The Admin Center is used in Section\r\n3.4 Operations through the Admin Center.\r\n\r\n\\\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n**3.3Perform collective operations via scripting**\r\n--------------------------------------------------\r\n\r\n\\\r\n\r\nApproximate time: 5 – 10 minutes\\\r\n\\\r\nIn this section, you use Jython scripting to perform MBean operations\r\nagainst the collective controller which allow you to start and stop\r\nregistered collective members.\\\r\n\\\r\n3.3.1 Run the Jython script provided to stop the collective member.\\\r\n\\\r\n In order to run the script, set the CLASSPATH and JYTHONPATH\r\nenvironment \\\r\n variables to include the restConnector.jar and run the provided client\r\njython\\\r\n script. The script is hard-coded for the host name, paths, user names\r\nand\\\r\n passwords used in these instructions. If you have modified any of\r\nthese\\\r\n values, you will need to edit the script.\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# export CLASSPATH=/opt/wlp/clients/restConnector.jar# export JYTHONPATH=/opt/wlp/clients/jython/# jython /opt/lab-materials/jython/stopCollectiveMember.py\r\n~~~~\r\n\r\n\\\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: none; border-right: none; padding: 0.04cm 0cm; font-weight: normal; text-align: left; widows: 2; orphans: 2\"}\r\n[root@localhost wlp]# jython /opt/lab-materials/jython/stopCollectiveMember.py\r\nConnecting to the server...\r\nSuccessfully connected to the server \"localhost:9443\"\r\nConnected to the controller MBean server\r\n\r\nNumber of registered mbeans: 39\r\n\r\nGetting server status\r\ncontroller1 status: STARTED\r\nmember1 status: STARTED\r\n\r\nStopping member1\r\nStop member1 status:\r\n{returnCode=0, stdout=Stopping server member1.\r\nServer member1 stopped.\r\n, stderr=}\r\n\r\nDisconnecting from the MBean server\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\r\n3.3.2 Verify the server stopped.\\\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# bin/server status member1\r\n\r\n\r\n[root@localhost wlp]# bin/server status member1\r\nServer member1 is not running.\r\n~~~~\r\n\r\n\\\r\n3.3.3 Start the collective member via scripting.\\\r\n\\\r\n\r\nCopy the stopCollectiveMember.py script to startCollectiveMember.py.\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# cp /opt/lab-materials/jython/stopCollectiveMember.py startCollectiveMember.py\r\n~~~~\r\n\r\nModify the startCollectiveMember.py script to invoke the startServer\r\noperation.\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# gedit startCollectiveMember.py\r\n~~~~\r\n\r\n\\\r\nChange 'stop' to 'start':\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n~~~~\r\n\r\n\\\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_m194400ab.png)\\\r\nSave and close the file.\r\n\r\n\\\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"margin-left: 1.27cm; page-break-before: always\"}\r\n~~~~\r\n\r\nRun the modified script.\r\n\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# jython startCollectiveMember.py\r\n~~~~\r\n\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: none; border-right: none; padding: 0.04cm 0cm; font-weight: normal; text-align: left; widows: 2; orphans: 2\"}\r\n[root@localhost wlp]# jython startCollectiveMember.py \r\nConnecting to the server...\r\nSuccessfully connected to the server \"localhost:9443\"\r\nConnected to the controller MBean server\r\n\r\nNumber of registered mbeans: 39\r\n\r\nGetting server status\r\ncontroller1 status: STARTED\r\nmember1 status: STOPPED\r\n\r\nStarting member1\r\nStart member1 status:\r\n{returnCode=0, stdout=Starting server member1.\r\nServer member1 started with process ID 13050.\r\n, stderr=}\r\n\r\nDisconnecting from the MBean server\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n3.3.4 Verify the server has been started.\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# bin/server status member1\r\n~~~~\r\n\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: none; border-right: none; padding: 0.04cm 0cm; font-weight: normal; text-align: left; widows: 2; orphans: 2\"}\r\n[root@localhost wlp]# bin/server status member1\r\nServer member1 is running with process ID 13050.\r\n~~~~\r\n\r\n\\\r\nYou now have basic Jython experience and have used the MBeans available\r\non the\\\r\ncollective controller to perform operations against the registered\r\ncollective\\\r\nmembers.\\\r\n\\\r\n\r\n3.4Operations through the Admin Center\r\n--------------------------------------\r\n\r\n\\\r\n\r\nApproximate time: 5 – 10 minutes\r\n\r\n\\\r\n\r\n3.4.1 Enable the Admin Center.\\\r\n\\\r\n The Admin Center is a feature, and is therefore not enabled by\r\ndefault.\\\r\n To enable the Admin Center, add the 'adminCenter-1.0' feature to the\r\nlist\\\r\n of enabled features.\r\n\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# gedit usr/servers/controller1/server.xml\r\n~~~~\r\n\r\nAdd the 'adminCenter-1.0' feature:\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"margin-left: 1.27cm; font-weight: normal\"}\r\n<feature>adminCenter-1.0</feature>\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_m4ae09542.png)\\\r\n\\\r\n\r\nSave and close the file.\r\n\r\n\\\r\n\r\n\\\r\n\r\n3.4.2 Log into the Admin Center\\\r\n\\\r\n Start Firefox, go to URL\r\n[http://localhost:9080/adminCenter](http://localhost:9080/adminCenter)\r\n\r\n\\\r\nYou will need to accept the server's SSL certificate.\\\r\n\\\r\nFirst, click “Add Exception...”\r\n\r\n\\\r\n\r\n\\\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_78e31ceb.png)\\\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\\\r\n\\\r\n\r\nNext, confirm the security exception by clicking “Confirm Security\r\nException”.\r\n\r\n\\\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_22c745a5.png)\\\r\n\\\r\n\r\n\\\r\n\\\r\n\\\r\n\r\nNow log in to the Admin Center with the administrator user name and \\\r\n password ( **'admin'**/ **'adminpwd'** ).\\\r\n\\\r\n Enter the user name and password and click “Login”.\r\n\r\n\\\r\n\r\n\\\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_m37938f0f.png)\\\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n3.4.3 The Toolbox\\\r\n\r\nEach user of the Admin Center has a customized view called 'the\r\nToolbox'.\\\r\n The Toolbox allows the user to choose the set of tools that they wish\r\nto use. \\\r\n\\\r\n By default, the Toolbox is populated with the initial set of tools that\r\nare\\\r\n present in the catalog. The catalog is the set of all tools installed\r\ninto the\\\r\n Liberty profile runtime. Users can also add links to commonly used\r\npages by\\\r\n adding a bookmark.\\\r\n\\\r\n\r\nThe Toolbox view:\r\n\r\n\\\r\n\r\n\\\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_1996822f.png)\\\r\n\\\r\n\\\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n3.4.4 Select the Explore tool.\\\r\n\\\r\n The Explore tool provides management capabilities for servers,\r\napplications\\\r\n and clusetrs within the collective. The tool's initial view is a\r\ndashboard which\\\r\n displays high-level information about the elements of the topology. \\\r\n\\\r\n The Explore Dashboard:\r\n\r\n\\\r\n\\\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_1c5b9a75.png)\\\r\n\\\r\n\r\n\\\r\n\r\n3.4.5 Click on the Servers dashboard element.\\\r\n\\\r\n Each dashboard element displays the high-level information about\r\nelements\\\r\n in the topology. Clicking on the Servers category on the dashboard\r\nwill\\\r\n display individual details about each server.\\\r\n\\\r\n From this view, individual or groups of servers can be started or\r\nstopped, and\\\r\n details for a specific server can be seen by clicking on a server.\r\n\r\n\\\r\n\\\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_m32117fe2.png)\\\r\n\\\r\n\r\n\\\r\n\r\n3.4.6 Stop and restart member1 through the tool.\\\r\n\\\r\n Operations can be performed on any server, cluster or application in\r\nthe\\\r\n collective via the Admin Center. In this step, stop member1 by\r\nclicking\\\r\n on the green arrow icon in the upper right corner of the member1 card,\\\r\n and select stop.\\\r\n\\\r\n\\\r\n\r\nResult of the stop operation:\r\n\r\n\\\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_m555eb0fb.png)\\\r\n\\\r\n\\\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n The server can be restarted by repeating the steps and clicking on the\r\nred \\\r\n stopped icon and selecting the start operation. \\\r\n\\\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_m2d40b3fb.png)\\\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\nResult of the start operation:\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_5f7416dd.png)\\\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n Be sure to leave member1 running at the end of this section.\\\r\n\\\r\n\r\nVarious information and multiple actions are available through the Admin\r\nCenter. Not all aspects are examined in this lab.\r\n\r\n\\\r\n\r\n**3.5Create a cluster**\r\n-----------------------\r\n\r\n\\\r\n\r\nApproximate time: 15 - 30 minutes\\\r\n\\\r\nIn this section, you expand the collective by adding a new member,\r\nconfigure both members to join the default cluster, and finally use\r\nJython scripting and the Admin Center to perform operations on the\r\ncluster.\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_m6a6bc105.png)\\\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n3.5.1 Create a second member to join the collective.\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# bin/server create member2\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n[root@localhost wlp]\\# bin/server create member2\r\n\r\nServer member2 created.\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\\\r\n\r\n\\\r\n\r\n3.5.2 Join member2 to the collective.\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# bin/collective join member2 --host=localhost --port=9443 --user=admin --password=adminpwd --keystorePassword=Impact2014 --createConfigFile\r\n~~~~\r\n\r\n\\\r\n\\\r\n\r\n\\\r\n\r\n[root@localhost wlp]\\# bin/collective join member2 --host=localhost\r\n--port=9443 --user=admin --password=adminpwd\r\n--keystorePassword=Impact2014 --createConfigFile\r\n\r\nJoining the collective with target controller localhost:9443...\r\n\r\nThis may take a while.\r\n\r\n\\\r\n\r\nSSL trust has not been established with the target server.\r\n\r\n\\\r\n\r\nCertificate chain information:\r\n\r\nCertificate [0]\r\n\r\nSubject DN: CN=localhost, OU=controller1, O=ibm, C=us\r\n\r\nIssuer DN: OU=controllerRoot, O=a6291247-6162-45e0-ba14-13f2492c4c43,\r\nDC=com.ibm.ws.collective\r\n\r\nSerial Number: 8,094,236,004,743\r\n\r\nExpires: 3/17/19 1:03 PM\r\n\r\nSHA-1 digest:\r\nE5:AB:0E:10:EC:36:1F:E2:E0:A9:28:3B:99:31:2E:06:88:A0:3A:01\r\n\r\nMD5 digest: 7B:F6:46:A6:9F:F3:9B:F9:62:C8:7C:33:8C:CB:14:5F\r\n\r\n\\\r\n\r\nCertificate [1]\r\n\r\nSubject DN: OU=controllerRoot, O=a6291247-6162-45e0-ba14-13f2492c4c43,\r\nDC=com.ibm.ws.collective\r\n\r\nIssuer DN: OU=controllerRoot, O=a6291247-6162-45e0-ba14-13f2492c4c43,\r\nDC=com.ibm.ws.collective\r\n\r\nSerial Number: 8,089,778,095,633\r\n\r\nExpires: 3/12/39 12:03 PM\r\n\r\nSHA-1 digest:\r\n70:E9:77:87:AF:B0:75:AC:0D:0A:64:87:9C:8A:83:3E:3A:33:97:8F\r\n\r\nMD5 digest: BE:E3:34:0F:CC:20:F9:83:0A:B6:62:1F:8E:32:81:3D\r\n\r\n\\\r\n\r\nDo you want to accept the above certificate chain? (y/n) **y (hit\r\nEnter)**\r\n\r\nSuccessfully completed MBean request to the controller.\r\n\r\n\\\r\n\r\nSuccessfully joined the collective for server member2\r\n\r\n\\\r\n\r\nAdd the following lines to the server.xml to enable:\r\n\r\n\\\r\n\r\n<include location=\"${server.config.dir}/collective-join-include.xml\" /\\>\r\n\r\n\\\r\n\r\n\\\r\n\r\n3.5.3 Update the server.xml for member2.\\\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# gedit usr/servers/member2/server.xml\r\n~~~~\r\n\r\nChange the HTTP and HTTPS ports to 9082 and 9445:\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"margin-left: 1.27cm; font-weight: normal\"}\r\n<httpEndpoint id=\"defaultHttpEndpoint\" httpPort=\"9082\"                                        httpsPort=”9445” />\r\n~~~~\r\n\r\n\\\r\nAdd an include for the file created by the join operation:\r\n\r\n~~~~ {.western lang=\"en-US\"}\r\n    <include location=\"${server.config.dir}/collective-join-include.xml\" />\r\n~~~~\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_22754e0a.png)\\\r\n\\\r\n\r\n\\\r\n\r\nSave and close the file.\\\r\n\\\r\n3.5.4 Start member2.\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# bin/server start member2\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\r\n[root@localhost wlp]\\# bin/server start member2\r\n\r\nStarting server member2.\r\n\r\nServer member2 started with process ID 15950.\r\n\r\n\\\r\n\r\n\\\r\n\r\n3.5.5 Verify the member started and is publishing information to the\r\ncontroller.\r\n\r\n\\\r\n\r\n'grep' for messages CWWKX8112I, CWWKX8114I and CWWKX8116I:\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# grep CWWKX811[246]I usr/servers/member2/logs/messages.log\r\n~~~~\r\n\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n\r\n[root@localhost wlp]# grep CWWKX811[246]I usr/servers/member2/logs/messages.log\r\n[3/18/14 18:59:33:921 EDT] 00000017 llective.member.internal.publisher.ServerManagementPublisher I CWWKX8112I: The server's host information was successfully published to the collective repository. \r\n[3/18/14 18:59:35:143 EDT] 00000017 ws.collective.member.internal.publisher.ServerPathsPublisher I CWWKX8114I: The server's paths were successfully published to the collective repository. \r\n[3/18/14 18:59:35:339 EDT] 00000017 ws.collective.member.internal.publisher.ServerStatePublisher I CWWKX8116I: The server STARTED state was successfully published to the collective repository.\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n3.5.6 Assign member1 and member2 to the default cluster.\\\r\n\\\r\n\r\nThe cluster configuration is dynamically updated and published to the\\\r\n collective controller.\r\n\r\n\\\r\n Modify each server.xml for the members:\r\n\r\n\\\r\n \\# gedit usr/servers/member1/server.xml\\\r\n\\\r\n \\# gedit usr/servers/member2/server.xml\\\r\n\\\r\n\\\r\n Add the following configuration to each server's server.xml:\\\r\n\\\r\n\r\n\\\r\n\r\n<featureManager\\>\\\r\n <feature\\>clusterMember-1.0</feature\\>\\\r\n </featureManager\\>\r\n\r\n\\\r\n\r\n\\\r\n\r\nYou now have the default cluster created, with member1 and member2\r\nbelonging\\\r\nto the defaultCluster group. Multiple clusters can be defined with a\r\nsingle collective, but a server may only belong to one cluster group at\r\na time.\r\n\r\n\\\r\n\r\n\\\r\n3.5.7 Get status for \"defaultCluster\" via scripting.\\\r\n\\\r\n The controller provides the ClusterManagerMBean which defines\r\noperations\\\r\n for obtaining information about defined clusters, starting and stopping\r\nall\\\r\n of the servers in a cluster, and for generating plugin-cfg.xml files.\\\r\n\\\r\n The provided getClusterStatus.py script uses various\r\nClusterManagerMBean \\\r\n operations to determine the defined clusters and the members which\r\nbelong \\\r\n to the defaultCluster.\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# jython /opt/lab-materials/jython/getClusterStatus.py\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: none; border-right: none; padding: 0.04cm 0cm; font-weight: normal; text-align: left; widows: 2; orphans: 2\"}\r\n[root@localhost wlp]# jython /opt/lab-materials/jython/getClusterStatus.py\r\nConnecting to the server...\r\nSuccessfully connected to the server \"localhost:9443\"\r\nConnected to the controller MBean server\r\n\r\nNumber of registered mbeans: 39\r\n\r\nDefined Clusters:\r\n[defaultCluster]\r\n\r\nCluster members of 'defaultCluster':\r\n[localhost,/opt/wlp/usr,member2, localhost,/opt/wlp/usr,member1]\r\n\r\nStatus of 'defaultCluster': STARTED\r\n\r\nCluster assignments by server:\r\ncontroller1 cluster: None\r\nmember1 cluster: defaultCluster\r\nmember2 cluster: defaultCluster\r\n\r\nDisconnecting from the MBean server\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n3.5.8 Stop cluster using the stopCluster.py sample script from\r\nwasdev.net\\\r\n\\\r\n Multiple sample scripts are available for download on wasdev.net\\\r\n The sample scripts are available in\r\n/opt/lab-materials/jython/sample\\_scripts\\\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# export JYTHONPATH=/opt/wlp/clients/jython/:/opt/lab-materials/jython/sample_scripts/lib# jython /opt/lab-materials/jython/sample_scripts/stopCluster.py defaultCluster --host=localhost --port=9443 --user=admin --password=adminpwd --truststore=usr/servers/controller1/resources/security/trust.jks --truststorePassword=Impact2014 \r\n\r\n[root@localhost wlp]# jython /opt/lab-materials/jython/sample_scripts/stopCluster.py defaultCluster --host=localhost --port=9443 --user=admin --password=adminpwd --truststore=usr/servers/controller1/resources/security/trust.jks --truststorePassword=Impact2014\r\nConnecting to the server...\r\nSuccessfully connected to the server \"localhost:9443\"\r\nlocalhost,/opt/wlp/usr,member2 stopped, RC=0\r\nlocalhost,/opt/wlp/usr,member1 stopped, RC=0\r\n~~~~\r\n\r\n\\\r\n\\\r\n\\\r\n3.5.9 Verify the servers in the cluster group have stopped.\r\n\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n# bin/server status member1\r\n# bin/server status member2\r\n~~~~\r\n\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: none; border-right: none; padding: 0.04cm 0cm; font-weight: normal; text-align: left; widows: 2; orphans: 2\"}\r\n[root@localhost wlp]# bin/server status member1\r\nServer member1 is not running.\r\n\r\n[root@localhost wlp]# bin/server status member2\r\nServer member2 is not running.\r\n~~~~\r\n\r\n\\\r\n3.5.10 Start the cluster via the startCluster.py sample script.\r\n\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"margin-left: 1.27cm; font-weight: normal; text-align: left; widows: 2; orphans: 2\"}\r\n# jython /opt/lab-materials/jython/sample_scripts/startCluster.py defaultCluster --host=localhost --port=9443 --user=admin --password=adminpwd --truststore=usr/servers/controller1/resources/security/trust.jks --truststorePassword=Impact2014 \r\n~~~~\r\n\r\n\\\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: none; border-right: none; padding: 0.04cm 0cm; font-weight: normal; text-align: left; widows: 2; orphans: 2\"}\r\n[root@localhost wlp]# jython /opt/lab-materials/jython/sample_scripts/startCluster.py defaultCluster --host=localhost --port=9443 --user=admin --password=adminpwd --truststore=usr/servers/controller1/resources/security/trust.jks --truststorePassword=Impact2014\r\nConnecting to the server...\r\nSuccessfully connected to the server \"localhost:9443\"\r\nlocalhost,/opt/wlp/usr,member2 started, RC=0\r\nlocalhost,/opt/wlp/usr,member1 started, RC=0\r\n~~~~\r\n\r\n\\\r\n\\\r\n\\\r\n\r\nThe ClusterManager MBean is an example of how the collective controller\r\nacts as an operational repository. Data queries, such as the\r\nlistClusterNames, listMembers and getStatus operations are performed\r\nentirely against the operational cache within the collective controller,\r\nwhile operations which require action on a target such as start and stop\r\nare performed against the respective collective member.\\\r\n\\\r\n\r\n\\\r\n\\\r\n\r\n\\\r\n3.5.11 Launch the Explore tool from the Admin Center.\\\r\n\\\r\n Now that a cluster is defined, the Explore dashboard will contain a\r\ncard\\\r\n which shows information about the defined clusters.\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_m1dcc7a30.png)\\\r\n\\\r\n\r\n\\\r\n3.5.12 Click the Clusters category of the dashboard to see an overview\r\nof the\\\r\n defined clusters.\\\r\n\\\r\n\r\nClick the defaultCluster card to see details about the cluster. \\\r\n\r\n\\\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_1a27e137.png)\\\r\n\\\r\n\r\n\\\r\n3.5.13 The defaultCluster details page shows the details of the\r\ncluster.\\\r\n\\\r\n\r\nNo applications are yet deployed to the cluster. Applications will be\\\r\n deployed in the next section.\\\r\n\r\n\\\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_1d31286.png)\\\r\n\\\r\n\r\n**3.6Deploying applications to the cluster**\r\n--------------------------------------------\r\n\r\n\\\r\n Approximate time: 20 – 40 minutes\r\n\r\n\\\r\n\r\nIn this section, you build upon the work done in previous sections to\r\ndeploy applications and configuration to all members of a cluster. This\r\nsection demonstrates the type of compound operations which are possible\r\nwith the MBeans available in WebSphere Application Server Liberty\r\nProfile 8.5.5, as well as describes a best practice for cluster\r\nconfiguration.\r\n\r\n\\\r\n\r\n3.6.1 Update the server.xml for each member to support file transfer.\\\r\n\\\r\n By default, servers only support read-only file transfer from their \\\r\n configuration directory. Subsequent steps will use the file transfer\r\nservice\\\r\n to deploy applications and new configuration to the cluster.\r\n\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"}\r\n # gedit usr/servers/member1/server.xml\r\n    # gedit usr/servers/member2/server.xml\r\n~~~~\r\n\r\nAdd the following lines to the server.xml. These lines will enable the\\\r\n file transfer service to write to the server's configuration directory.\r\n\r\n~~~~ {.western lang=\"en-US\"}\r\n <remoteFileAccess>\r\n     <writeDir>${server.config.dir}</writeDir>\r\n </remoteFileAccess>\r\n~~~~\r\n\r\n\\\r\n3.6.2 Create a bootstrap.properties file for each cluster member.\\\r\n\\\r\n This file will contain the configuration which is unique to each\r\nserver, such\\\r\n as port numbers. This will support using a common server.xml for all\r\nof\\\r\n the cluster members.\\\r\n\\\r\n Set the contents of each bootstrap.properties as describe below.\r\n\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"}\r\n  # gedit usr/servers/member1/bootstrap.properties\r\nhttp.port=9081\r\nhttps.port=9444\r\n\r\n\r\n # gedit usr/servers/member2/bootstrap.properties\r\nhttp.port=9082\r\nhttps.port=9445\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\\\r\n Save and close the files.\r\n\r\n\\\r\n3.6.3 Copy the server.xml for member1 and create a new generic\r\nserver.xml.\\\r\n\\\r\n The generic server.xml will use the new values defined in the\\\r\n bootstrap.properties file. This copy will serve as the basis for the\r\ncommon\\\r\n cluster member configuration and will use variable substitution for the\r\nserver\\\r\n specific configuration values.\r\n\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"}\r\n  # cp usr/servers/member1/server.xml clusterServer.xml\r\n # gedit clusterServer.xml\r\n~~~~\r\n\r\n\\\r\n\r\nModify the following XML lines to use the new values in\r\nbootstrap.properties:\r\n\r\n~~~~ {.western lang=\"en-US\"}\r\n <httpEndpoint id=\"defaultHttpEndpoint\"\r\n                    httpPort=\"${http.port}\"\r\n                    httpsPort=\"${https.port}\" />\r\n~~~~\r\n\r\n\\\r\n\r\nSave and close the file.\r\n\r\n\\\r\n3.6.4 Push the application \"snoop\" to the cluster.\\\r\n\\\r\n The deployAppToCluster.py script uses a combination of the\r\nClusterManager\\\r\n and FileTransfer MBeans to push the application to all of the cluster\r\nmembers. This operation will push the application to\r\n${server.config.dir}/apps/ for each\\\r\n cluster member.\\\r\n\\\r\n This script does not alter the server.xml for the targets. The\r\nserver.xml\\\r\n configuration will be updated in the next step.\r\n\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"margin-left: 1.24cm; text-align: left; widows: 2; orphans: 2\"}\r\n# jython /opt/lab-materials/jython/sample_scripts/deployAppToCluster.py /opt/lab-materials/applications/snoop.war --truststore=usr/servers/controller1/resources/security/trust.jks --truststorePassword=Impact2014 --host=localhost --port=9443 --user=admin --password=adminpwd --clusterName=defaultCluster\r\n~~~~\r\n\r\n\\\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: none; border-right: none; padding: 0.04cm 0cm; font-weight: normal; text-align: left; widows: 2; orphans: 2\"}\r\n[root@localhost wlp]# jython /opt/lab-materials/jython/sample_scripts/deployAppToCluster.py /opt/lab-materials/applications/snoop.war --truststore=usr/servers/controller1/resources/security/trust.jks --truststorePassword=Impact2014 --host=localhost --port=9443 --user=admin --password=adminpwd --clusterName=defaultCluster\r\nConnecting to the server...\r\nSuccessfully connected to the server \"localhost:9443\"\r\n\r\nPushing the application to server localhost,/opt/wlp/usr,member2\r\n\r\nPushing the application to server localhost,/opt/wlp/usr,member1\r\n~~~~\r\n\r\n\\\r\n\\\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n3.6.5 Update the common cluster configuration for the application\r\n\"snoop\".\\\r\n\\\r\n Applications can be explicitly configured in the server.xml using the\\\r\n <application\\> stanza.\r\n\r\n~~~~ {.western lang=\"en-US\"}\r\n  # gedit clusterServer.xml\r\n~~~~\r\n\r\nAdd the following lines to the clusterServer.xml:\r\n\r\n~~~~ {.western lang=\"en-US\"}\r\n  <application type=\"war\" id=\"snoop\" name=\"snoop\"             location=\"${server.config.dir}/apps/snoop.war\"/>\r\n~~~~\r\n\r\n\\\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_784357c5.png)\\\r\n\\\r\n Save and close the file.\r\n\r\n\\\r\n3.6.6 Restart the cluster members.\\\r\n\\\r\n This step is required as the bootstrap.properties file is not\r\ndynamically\\\r\n loaded. The bootstrap.properties is processed only during JVM start-up.\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"margin-left: 1.27cm; text-align: left; widows: 2; orphans: 2\"}\r\n# jython /opt/lab-materials/jython/sample_scripts/stopCluster.py defaultCluster --truststore=usr/servers/controller1/resources/security/trust.jks --truststorePassword=Impact2014 --host=localhost --port=9443 --user=admin --password=adminpwd# jython /opt/lab-materials/jython/sample_scripts/startCluster.py defaultCluster --truststore=usr/servers/controller1/resources/security/trust.jks --truststorePassword=Impact2014 --host=localhost --port=9443 --user=admin --password=adminpwd\r\n~~~~\r\n\r\n*\\\r\n Command output omitted.\\\r\n See previous steps 3.5.8 and 3.5.10 for the expected output.\\\r\n*\\\r\n\r\n\\\r\n\\\r\n3.6.7 Push the common cluster configuration to all of the members of the\r\ncluster.\\\r\n\\\r\n This step will update the server.xml of all the cluster members. Each\r\ncluster\\\r\n member will dynamically update its runtime configuration after the\r\nfile\\\r\n transfer completes.\\\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"margin-left: 1.27cm; text-align: left; widows: 2; orphans: 2\"}\r\n# jython /opt/lab-materials/jython/sample_scripts/deployConfigToCluster.py clusterServer.xml --truststore=usr/servers/controller1/resources/security/trust.jks --truststorePassword=Impact2014 --host=localhost --port=9443 --user=admin --password=adminpwd --clusterName=defaultCluster\r\n\r\n[root@localhost wlp]# jython /opt/lab-materials/jython/sample_scripts/deployConfigToCluster.py clusterServer.xml --truststore=usr/servers/controller1/resources/security/trust.jks --truststorePassword=Impact2014 --host=localhost --port=9443 --user=admin --password=adminpwd --clusterName=defaultCluster\r\nConnecting to the server...\r\nSuccessfully connected to the server \"localhost:9443\"\r\n\r\nPushing the server.xml to server localhost,/opt/wlp/usr,member2\r\n\r\nPushing the server.xml to server localhost,/opt/wlp/usr,member1\r\n~~~~\r\n\r\n\\\r\n3.6.8 Access the application \"snoop\" running on member1 and member2.\\\r\n \\\r\n The application is now available on both members of the cluster.\\\r\n It is out of the scope of this lab, but IBM HTTP Server (IHS) can be\r\nused\\\r\n to perform load balancing across the cluster members.\\\r\n\\\r\n Run firefox, go to URLs:\r\n[http://localhost:9081/snoop](http://localhost:9081/snoop)\\\r\n [http://localhost:9082/snoop](http://localhost:9082/snoop)\r\n\r\n\\\r\n\\\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_492dea5b.png)\\\r\n\\\r\n\r\n\\\r\n\\\r\n Close the browser.\r\n\r\n\\\r\n3.6.9 Install the application \"ImpactWeb\" to the cluster.\\\r\n\\\r\n This operation combines application deploy and configuration file\r\nupdates\\\r\n to demonstrate an alternate pattern for installing an application to a\\\r\n cluster.\\\r\n\\\r\n This deployment option is limited by the simple application\r\nconfiguration.\\\r\n For more complex application configurations, it is recommended to\r\nfollow\\\r\n steps similar to 3.6.4 and 3.6.7, as those steps provide for the most\r\nflexibility\\\r\n in the application configuration.\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"margin-left: 1.3cm; text-align: left; widows: 2; orphans: 2\"}\r\n# jython /opt/lab-materials/jython/sample_scripts/appInstall.py --install=/opt/lab-materials/applications/ImpactWeb.war  --clusterName=defaultCluster --truststore=usr/servers/controller1/resources/security/trust.jks --truststorePassword=Impact2014 --host=localhost --port=9443 --user=admin --password=adminpwd\r\n~~~~\r\n\r\n\\\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: none; border-right: none; padding: 0.04cm 0cm; font-weight: normal; text-align: left; widows: 2; orphans: 2\"}\r\n[root@localhost wlp]# jython /opt/lab-materials/jython/sample_scripts/appInstall.py --install=/opt/lab-materials/applications/ImpactWeb.war --clusterName=defaultCluster --truststore=usr/servers/controller1/resources/security/trust.jks --truststorePassword=Impact2014 --host=localhost --port=9443 --user=admin --password=adminpwd\r\nConnecting to the server...\r\nSuccessfully connected to the server \"localhost:9443\"\r\nUploading application ImpactWeb.war to localhost,/opt/wlp/usr,member2\r\nUpdating server config for localhost,/opt/wlp/usr,member2\r\nComplete\r\nUploading application ImpactWeb.war to localhost,/opt/wlp/usr,member1\r\nUpdating server config for localhost,/opt/wlp/usr,member1\r\nComplete\r\n~~~~\r\n\r\n\\\r\n\\\r\n\\\r\n\\\r\n\\\r\n\r\n\\\r\n3.6.10 Access the application \"ImpactWeb\" running on member1 and\r\nmember2.\\\r\n\\\r\n Run firefox, go to URLs:\r\n[http://localhost:9081/ImpactWeb/WorkingServlet](http://localhost:9081/ImpactWeb/WorkingServlet)\\\r\n\r\n[http://localhost:9082/ImpactWeb/WorkingServlet](http://localhost:9082/ImpactWeb/WorkingServlet)[\\\r\n](http://localhost:9082/ImpactWeb/WorkingServlet)[\\\r\n](http://localhost:9081/snoop)\\\r\n\\\r\n\r\n\\\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_m5e0dcbe9.png)\\\r\n\\\r\n Close the browser.\r\n\r\n\\\r\n\\\r\n\\\r\n\r\n3.6.11 Launch Explore tool via the Admin Center.\\\r\n\\\r\n The dashboard now has information about the defined servers, the\r\ncluster\\\r\n to which they belong, and the applications deployed.[\\\r\n](http://localhost:9081/snoop)\\\r\n\\\r\n\r\n\\\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_m496316ed.png)\\\r\n\\\r\n Close the browser.\r\n\r\n\\\r\nYou now have an active cluster group with the \"snoop\" and \"ImpactWeb\"\r\napplications\\\r\ndeployed. The cluster configuration is written in such a way that new\r\ncluster members can be easily added by creating new servers and setting\r\ntheir bootstrap.properties file accordingly. An alternate choice to\r\nsupport common configuration is to use include files supported by the\r\nserver.xml. The server specific configuration can be stored in a\r\nseparate include file, and the common configuration can be stored in the\r\ncommon server.xml.\r\n\r\n\\\r\n\\\r\n\r\n**3.7Deploying server packages via Admin Center**\r\n-------------------------------------------------\r\n\r\n\\\r\n\r\nApproximate time: 10 – 15 minutes\\\r\n\\\r\nIn this section, you use the Admin Center to deploy a server package and\r\njoin the deployed server to the collective. A server package can be\r\ndeployed to any host that is registered with the collective. The Deploy\r\ntool uses the collective file transfer operations. In order to transfer\r\na file to a host, the host must be registered with the collective and\r\nthe transfer paths must be specified. \\\r\n\\\r\n3.7.1 Update the localhost configuration to define writable file\r\ntransfer paths.\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"margin-left: 1.27cm; text-align: left; widows: 2; orphans: 2\"}\r\n# bin/collective updateHost localhost --host=localhost --port=9443 --user=admin --password=adminpwd --rpcUser=root --rpcUserPassword=web1sphere --hostReadPath=/opt --hostWritePath=/opt\r\n~~~~\r\n\r\n\\\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: none; border-right: none; padding: 0.04cm 0cm; font-weight: normal; text-align: left; widows: 2; orphans: 2\"}\r\n[root@localhost wlp]# bin/collective updateHost localhost --host=localhost --port=9443 --user=admin --password=adminpwd --rpcUser=root --rpcUserPassword=web1sphere --hostReadPath=/opt --hostWritePath=/opt\r\nUpdating the authentication information for the host...\r\n\r\nSSL trust has not been established with the target server.\r\n\r\nCertificate chain information:\r\nCertificate [0]\r\nSubject DN: CN=localhost, OU=controller1, O=ibm, C=us\r\nIssuer DN: OU=controllerRoot, O=33f0f8ae-136f-4217-a940-e0319865c876, DC=com.ibm.ws.collective\r\nSerial Number: 386,393,443,355\r\nExpires: 4/10/19 9:18 AM\r\nSHA-1 digest: 32:2F:C2:4B:54:70:98:E0:91:7A:38:8E:BD:E8:FB:17:7C:6D:5A:D6\r\nMD5 digest: 39:68:24:6D:2D:7C:1F:3D:0B:6B:12:2B:9A:24:26:EB\r\n\r\nCertificate [1]\r\nSubject DN: OU=controllerRoot, O=33f0f8ae-136f-4217-a940-e0319865c876, DC=com.ibm.ws.collective\r\nIssuer DN: OU=controllerRoot, O=33f0f8ae-136f-4217-a940-e0319865c876, DC=com.ibm.ws.collective\r\nSerial Number: 383,670,768,566\r\nExpires: 4/5/39 9:18 AM\r\nSHA-1 digest: C5:B2:C0:BF:AD:35:9F:C2:E1:FC:E4:7D:00:35:41:85:1D:36:25:8E\r\nMD5 digest: 7B:22:25:84:25:3A:71:F3:69:FD:33:C2:29:86:0A:BE\r\n\r\nDo you want to accept the above certificate chain? (y/n) y (hit Enter)\r\nHost localhost authentication information successfully updated.\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\r\n3.7.2 Create a server to be deployed.\r\n\r\n\\\r\n\r\n\\# bin/server create memberX\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"margin-left: 1.27cm; font-weight: normal\"}\r\n\r\n\r\n[root@localhost wlp]# bin/server create memberX\r\nServer memberX created.\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\r\n3.7.3 Copy the sample application \"snoop\" to the server to be deployed.\r\n\\\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"margin-left: 1.27cm; font-style: normal; font-weight: normal\"}\r\n# cp /opt/lab-materials/applications/snoop.war usr/servers/memberX/apps\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n3.7.4 Configure the server to be deployed.\\\r\n\\\r\n\r\n\\# gedit usr/servers/memberX/server.xml\r\n\r\n\\\r\n\r\nChange the HTTP and HTTPS ports to 9079 and 9442 and configure the app.\r\n\r\n~~~~ {.western lang=\"en-US\" style=\"margin-left: 1.27cm\"}\r\n<httpEndpoint id=\"defaultHttpEndpoint\" httpPort=\"9079\"                                        httpsPort=”9442” />\r\n\r\n    <application type=\"war\" id=\"snoop\" name=\"snoop\"             location=\"${server.config.dir}/apps/snoop.war\"/>\r\n~~~~\r\n\r\n\\\r\n\r\n3.7.5 Package the server.\\\r\n\\\r\n Packaging the server will create a self-contained copy of the entire\r\nLiberty\\\r\n installation which includes the server's configuration. This\r\nself-contained\\\r\n package will be deployed to a host in the next steps. \\\r\n\\\r\n\r\n\\# bin/server package memberX\r\n\r\n\\\r\n\r\n\\\r\n\r\n~~~~ {.western lang=\"en-US\"\r\nstyle=\"border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: none; border-right: none; padding: 0.04cm 0cm; font-weight: normal; text-align: left; widows: 2; orphans: 2\"}\r\n[root@localhost wlp]# bin/server package memberX\r\nPackaging server memberX.\r\nServer memberX package complete in /opt/wlp/usr/servers/memberX/memberX.zip.\r\n~~~~\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n3.7.6 Launch the Deploy tool from the Admin Center.\\\r\n\\\r\n In this lab, the only available host is localhost. In a real\r\nenvironment, \\\r\n additional hosts can be added as deployment targets.\r\n\r\n\\\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_m3331e285.png)\\\r\n\\\r\n\r\n\\\r\n\r\n3.7.7 Select 'localhost' from the list of available hosts.\r\n\r\n\\\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_m29b7759f.png)\\\r\n\\\r\n\r\n3.7.8 Scroll down and click 'Browse'.\\\r\n\\\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_m681db6fb.png)\\\r\n\\\r\n\r\n\\\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_58226598.png)\\\r\n3.7.9 Upload memberX.zip.\\\r\n\\\r\n Navigate to /opt/wlp/usr/servers/memberX via the File System button on\r\nthe\\\r\n File Upload navigator's side bar.\\\r\n\\\r\n\\\r\n\\\r\n\\\r\n\\\r\n\\\r\n\\\r\n\\\r\n\\\r\n\\\r\n\\\r\n\\\r\n\\\r\n\\\r\n\\\r\n\\\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_7d3c9e69.png)\\\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_162b8f32.png)\\\r\n3.7.10 Set the target installation directory to **/opt/wlp-deployed\\\r\n**Set the keystore passwords to **Impact2014**\\\r\n\\\r\n\\\r\n3.7.11 Enter the admin password '**adminpwd**' and click 'Deploy'\\\r\n\\\r\n\\\r\n3.7.12 Once the upload completes, select the background task button in\r\nthe upper\\\r\n right-hand corner to view the background tasks.\r\n\r\n\\\r\n\r\n\\\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_m1ce2e34e.png)\\\r\n The Background Tasks page:\\\r\n\\\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_4d951639.png)\\\r\n\\\r\n\r\n\\\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_6a17ad57.png)\\\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_m2dd95a64.png)\\\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_44e4bb52.png)\\\r\n3.7.13 The background tasks can be expanded to see the details of the\r\ntask.\\\r\n\\\r\n\\\r\n3.7.14 Return to the Explore tool.\\\r\n\\\r\n Hit back button in the Background Tasks view.\\\r\n\\\r\n Hit the Toolbox button in the Deploy view.\\\r\n\\\r\n Launch the Explore tool.\r\n\r\n\\\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_m4a0718dd.png)\\\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_m18a3c365.png)\\\r\n3.7.15 The total number of servers has increased to 4 servers. Start the\r\nnew server.\\\r\n\\\r\n The newly deployed server will show up in 'Unknown' state because it\r\nhas\\\r\n never been started. Click the Servers view.\\\r\n Click memberX.\r\n\r\n\\\r\n Click the Actions button (wrench icon) and start the server.\r\n\r\n\\\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_5346d69e.png)\\\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_m76ff750d.png)\\\r\n\\\r\n Result of the start operation:\r\n\r\n\\\r\n3.7.16 The server memberX is now started.\\\r\n\\\r\n Return to the 'All Servers' view by clicking on the breadcrumb.\r\n\r\n![image](Session_1377_IMPACT2014-Lab-instructions_html_56399d05.png)\\\r\n\\\r\n\r\n\\\r\n\\\r\n Close the browser.\\\r\n\\\r\n\\\r\n\r\nThe deployed server is automatically joined to the collective when\r\ndeployed via the Deploy tool and can be managed via the Admin Center and\r\nscripting. Additional hosts can be registered to the collective via the\r\nbin/collective registerHost command. The Deploy tool highlights just one\r\nof the deployment options available through the MBeans provided by the\r\ncollective controller. For more details on available collective\r\ncontroller MBeans, see the wasdev.net.\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n\\\r\n\r\n***Thank you!***\\\r\nThis lab is available from wasdev.net\r\n\r\n© 2014 Copyright IBM Corporation Page 61 of 61\r\n\r\n\\\r\n\r\n\\\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}